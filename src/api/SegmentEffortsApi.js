/**
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DetailedSegmentEffort', 'model/Fault'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/DetailedSegmentEffort'), require('../model/Fault'));
  } else {
    // Browser globals (root is window)
    if (!root.StravaApiV3) {
      root.StravaApiV3 = {};
    }
    root.StravaApiV3.SegmentEffortsApi = factory(root.StravaApiV3.ApiClient, root.StravaApiV3.DetailedSegmentEffort, root.StravaApiV3.Fault);
  }
}(this, function(ApiClient, DetailedSegmentEffort, Fault) {
  'use strict';

  /**
   * SegmentEfforts service.
   * @module api/SegmentEffortsApi
   * @version 3.0.0
   */

  /**
   * Constructs a new SegmentEffortsApi. 
   * @alias module:api/SegmentEffortsApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the getEffortsBySegmentId operation.
     * @callback module:api/SegmentEffortsApi~getEffortsBySegmentIdCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DetailedSegmentEffort>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Segment Efforts
     * Returns a set of the authenticated athlete&#39;s segment efforts for a given segment.
     * @param {Number} id The identifier of the segment.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page Page number.
     * @param {Number} opts.perPage Number of items per page. Defaults to 30. (default to 30)
     * @param {module:api/SegmentEffortsApi~getEffortsBySegmentIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DetailedSegmentEffort>}
     */
    this.getEffortsBySegmentId = function(id, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getEffortsBySegmentId");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['strava_oauth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [DetailedSegmentEffort];

      return this.apiClient.callApi(
        '/segments/{id}/all_efforts', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getSegmentEffortById operation.
     * @callback module:api/SegmentEffortsApi~getSegmentEffortByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DetailedSegmentEffort} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Segment Effort
     * Returns a segment effort from an activity that is owned by the authenticated athlete.
     * @param {Number} id The identifier of the segment effort.
     * @param {module:api/SegmentEffortsApi~getSegmentEffortByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DetailedSegmentEffort}
     */
    this.getSegmentEffortById = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getSegmentEffortById");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['strava_oauth'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = DetailedSegmentEffort;

      return this.apiClient.callApi(
        '/segment_efforts/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
