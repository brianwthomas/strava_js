/**
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MetaClub'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MetaClub'));
  } else {
    // Browser globals (root is window)
    if (!root.StravaApiV3) {
      root.StravaApiV3 = {};
    }
    root.StravaApiV3.SummaryClub = factory(root.StravaApiV3.ApiClient, root.StravaApiV3.MetaClub);
  }
}(this, function(ApiClient, MetaClub) {
  'use strict';




  /**
   * The SummaryClub model module.
   * @module model/SummaryClub
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>SummaryClub</code>.
   * @alias module:model/SummaryClub
   * @class
   * @implements module:model/MetaClub
   */
  var exports = function() {
    var _this = this;

    MetaClub.call(_this);












  };

  /**
   * Constructs a <code>SummaryClub</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SummaryClub} obj Optional instance to populate.
   * @return {module:model/SummaryClub} The populated <code>SummaryClub</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      MetaClub.constructFromObject(data, obj);
      if (data.hasOwnProperty('profile_medium')) {
        obj['profile_medium'] = ApiClient.convertToType(data['profile_medium'], 'String');
      }
      if (data.hasOwnProperty('cover_photo')) {
        obj['cover_photo'] = ApiClient.convertToType(data['cover_photo'], 'String');
      }
      if (data.hasOwnProperty('cover_photo_small')) {
        obj['cover_photo_small'] = ApiClient.convertToType(data['cover_photo_small'], 'String');
      }
      if (data.hasOwnProperty('sport_type')) {
        obj['sport_type'] = ApiClient.convertToType(data['sport_type'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('private')) {
        obj['private'] = ApiClient.convertToType(data['private'], 'Boolean');
      }
      if (data.hasOwnProperty('member_count')) {
        obj['member_count'] = ApiClient.convertToType(data['member_count'], 'Number');
      }
      if (data.hasOwnProperty('featured')) {
        obj['featured'] = ApiClient.convertToType(data['featured'], 'Boolean');
      }
      if (data.hasOwnProperty('verified')) {
        obj['verified'] = ApiClient.convertToType(data['verified'], 'Boolean');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
    }
    return obj;
  }

  /**
   * URL to a 60x60 pixel profile picture.
   * @member {String} profile_medium
   */
  exports.prototype['profile_medium'] = undefined;
  /**
   * URL to a ~1185x580 pixel cover photo.
   * @member {String} cover_photo
   */
  exports.prototype['cover_photo'] = undefined;
  /**
   * URL to a ~360x176  pixel cover photo.
   * @member {String} cover_photo_small
   */
  exports.prototype['cover_photo_small'] = undefined;
  /**
   * @member {module:model/SummaryClub.SportTypeEnum} sport_type
   */
  exports.prototype['sport_type'] = undefined;
  /**
   * The club's city.
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * The club's state or geographical region.
   * @member {String} state
   */
  exports.prototype['state'] = undefined;
  /**
   * The club's country.
   * @member {String} country
   */
  exports.prototype['country'] = undefined;
  /**
   * Whether the club is private.
   * @member {Boolean} private
   */
  exports.prototype['private'] = undefined;
  /**
   * The club's member count.
   * @member {Number} member_count
   */
  exports.prototype['member_count'] = undefined;
  /**
   * Whether the club is featured or not.
   * @member {Boolean} featured
   */
  exports.prototype['featured'] = undefined;
  /**
   * Whether the club is verified or not.
   * @member {Boolean} verified
   */
  exports.prototype['verified'] = undefined;
  /**
   * The club's vanity URL.
   * @member {String} url
   */
  exports.prototype['url'] = undefined;

  // Implement MetaClub interface:
  /**
   * The club's unique identifier.
   * @member {Number} id
   */
exports.prototype['id'] = undefined;

  /**
   * Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\"
   * @member {Number} resource_state
   */
exports.prototype['resource_state'] = undefined;

  /**
   * The club's name.
   * @member {String} name
   */
exports.prototype['name'] = undefined;


  /**
   * Allowed values for the <code>sport_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SportTypeEnum = {
    /**
     * value: "cycling"
     * @const
     */
    "cycling": "cycling",
    /**
     * value: "running"
     * @const
     */
    "running": "running",
    /**
     * value: "triathlon"
     * @const
     */
    "triathlon": "triathlon",
    /**
     * value: "other"
     * @const
     */
    "other": "other"  };


  return exports;
}));


