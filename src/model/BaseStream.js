/**
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.StravaApiV3) {
      root.StravaApiV3 = {};
    }
    root.StravaApiV3.BaseStream = factory(root.StravaApiV3.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BaseStream model module.
   * @module model/BaseStream
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>BaseStream</code>.
   * @alias module:model/BaseStream
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>BaseStream</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BaseStream} obj Optional instance to populate.
   * @return {module:model/BaseStream} The populated <code>BaseStream</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('original_size')) {
        obj['original_size'] = ApiClient.convertToType(data['original_size'], 'Number');
      }
      if (data.hasOwnProperty('resolution')) {
        obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
      }
      if (data.hasOwnProperty('series_type')) {
        obj['series_type'] = ApiClient.convertToType(data['series_type'], 'String');
      }
    }
    return obj;
  }

  /**
   * The number of data points in this stream
   * @member {Number} original_size
   */
  exports.prototype['original_size'] = undefined;
  /**
   * The level of detail (sampling) in which this stream was returned
   * @member {module:model/BaseStream.ResolutionEnum} resolution
   */
  exports.prototype['resolution'] = undefined;
  /**
   * The base series used in the case the stream was downsampled
   * @member {module:model/BaseStream.SeriesTypeEnum} series_type
   */
  exports.prototype['series_type'] = undefined;


  /**
   * Allowed values for the <code>resolution</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ResolutionEnum = {
    /**
     * value: "low"
     * @const
     */
    "low": "low",
    /**
     * value: "medium"
     * @const
     */
    "medium": "medium",
    /**
     * value: "high"
     * @const
     */
    "high": "high"  };

  /**
   * Allowed values for the <code>series_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SeriesTypeEnum = {
    /**
     * value: "distance"
     * @const
     */
    "distance": "distance",
    /**
     * value: "time"
     * @const
     */
    "time": "time"  };


  return exports;
}));


