/**
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SummaryAthlete'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SummaryAthlete'));
  } else {
    // Browser globals (root is window)
    if (!root.StravaApiV3) {
      root.StravaApiV3 = {};
    }
    root.StravaApiV3.Comment = factory(root.StravaApiV3.ApiClient, root.StravaApiV3.SummaryAthlete);
  }
}(this, function(ApiClient, SummaryAthlete) {
  'use strict';




  /**
   * The Comment model module.
   * @module model/Comment
   * @version 3.0.0
   */

  /**
   * Constructs a new <code>Comment</code>.
   * @alias module:model/Comment
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>Comment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Comment} obj Optional instance to populate.
   * @return {module:model/Comment} The populated <code>Comment</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('activity_id')) {
        obj['activity_id'] = ApiClient.convertToType(data['activity_id'], 'Number');
      }
      if (data.hasOwnProperty('text')) {
        obj['text'] = ApiClient.convertToType(data['text'], 'String');
      }
      if (data.hasOwnProperty('athlete')) {
        obj['athlete'] = SummaryAthlete.constructFromObject(data['athlete']);
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
    }
    return obj;
  }

  /**
   * The unique identifier of this comment
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The identifier of the activity this comment is related to
   * @member {Number} activity_id
   */
  exports.prototype['activity_id'] = undefined;
  /**
   * The content of the comment
   * @member {String} text
   */
  exports.prototype['text'] = undefined;
  /**
   * @member {module:model/SummaryAthlete} athlete
   */
  exports.prototype['athlete'] = undefined;
  /**
   * The time at which this comment was created.
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;



  return exports;
}));


