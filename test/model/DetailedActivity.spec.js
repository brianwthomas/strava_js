/**
 * Strava API v3
 * Strava API
 *
 * OpenAPI spec version: 3.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StravaApiV3);
  }
}(this, function(expect, StravaApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StravaApiV3.DetailedActivity();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DetailedActivity', function() {
    it('should create an instance of DetailedActivity', function() {
      // uncomment below and update the code to test DetailedActivity
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be.a(StravaApiV3.DetailedActivity);
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property photos (base name: "photos")', function() {
      // uncomment below and update the code to test the property photos
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property gear (base name: "gear")', function() {
      // uncomment below and update the code to test the property gear
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property calories (base name: "calories")', function() {
      // uncomment below and update the code to test the property calories
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property segmentEfforts (base name: "segment_efforts")', function() {
      // uncomment below and update the code to test the property segmentEfforts
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property deviceName (base name: "device_name")', function() {
      // uncomment below and update the code to test the property deviceName
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property embedToken (base name: "embed_token")', function() {
      // uncomment below and update the code to test the property embedToken
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property splitsMetric (base name: "splits_metric")', function() {
      // uncomment below and update the code to test the property splitsMetric
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property splitsStandard (base name: "splits_standard")', function() {
      // uncomment below and update the code to test the property splitsStandard
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property laps (base name: "laps")', function() {
      // uncomment below and update the code to test the property laps
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

    it('should have the property bestEfforts (base name: "best_efforts")', function() {
      // uncomment below and update the code to test the property bestEfforts
      //var instance = new StravaApiV3.DetailedActivity();
      //expect(instance).to.be();
    });

  });

}));
